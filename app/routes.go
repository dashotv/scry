// This file is autogenerated by Golem
// Do NOT make modifications, they will be lost
package app

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

func (a *Application) Routes() {
	a.Default.GET("/", a.homeHandler)
	a.Default.GET("/health", a.healthHandler)

	media := a.Router.Group("/media")
	media.GET("/", a.mediaIndexHandler)

	nzbs := a.Router.Group("/nzbs")
	nzbs.GET("/movie", a.nzbsMovieHandler)
	nzbs.GET("/tv", a.nzbsTvHandler)

	releases := a.Router.Group("/releases")
	releases.GET("/", a.releasesIndexHandler)

	search := a.Router.Group("/search")
	search.GET("/", a.searchIndexHandler)

	es := a.Router.Group("/es")
	es.GET("/", a.esIndexHandler)
	es.POST("/media", a.esMediaHandler)
	es.POST("/release", a.esReleaseHandler)

}

func (a *Application) homeHandler(c *gin.Context) {
	a.Index(c)
}

func (a *Application) Index(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{
		"name": "scry",
		"routes": gin.H{
			"media":    "/media",
			"nzbs":     "/nzbs",
			"releases": "/releases",
			"search":   "/search",
		},
	})
}

func (a *Application) healthHandler(c *gin.Context) {
	health, err := a.Health()
	if err != nil {
		c.JSON(http.StatusInternalServerError, gin.H{
			"error": err.Error(),
		})
		return
	}
	c.JSON(http.StatusOK, gin.H{"name": "scry", "health": health})
}

// /media
func (a *Application) mediaIndexHandler(c *gin.Context) {

	a.MediaIndex(c)
}

// /nzbs
func (a *Application) nzbsMovieHandler(c *gin.Context) {

	a.NzbsMovie(c)
}

func (a *Application) nzbsTvHandler(c *gin.Context) {

	a.NzbsTv(c)
}

// /releases
func (a *Application) releasesIndexHandler(c *gin.Context) {

	a.ReleasesIndex(c)
}

// /search
func (a *Application) searchIndexHandler(c *gin.Context) {

	a.SearchIndex(c)
}

func (a *Application) esIndexHandler(c *gin.Context) {

	a.EsIndex(c)
}
func (a *Application) esMediaHandler(c *gin.Context) {

	a.EsMedia(c)
}
func (a *Application) esReleaseHandler(c *gin.Context) {

	a.EsRelease(c)
}
