// Code generated by github.com/dashotv/golem. DO NOT EDIT.
package client

import (
	"context"

	"github.com/dashotv/fae"
)

type SearchService struct {
	client *Client
}

// NewSearch makes a new client for accessing Search services.
func NewSearchService(client *Client) *SearchService {
	return &SearchService{
		client: client,
	}
}

type SearchIndexResponse struct {
	*Response
	Result *SearchAllResponse `json:"result"`
	Total  int64              `json:"total"`
}

func (s *SearchService) Index(ctx context.Context) (*SearchIndexResponse, error) {
	result := &SearchIndexResponse{Response: &Response{}}
	resp, err := s.client.Resty.R().
		SetContext(ctx).
		SetResult(result).
		Get("/search/")
	if err != nil {
		return nil, fae.Wrap(err, "failed to make request")
	}
	if !resp.IsSuccess() {
		return nil, fae.Errorf("%d: %v", resp.StatusCode(), resp.String())
	}
	if result.Error {
		return nil, fae.New(result.Message)
	}

	return result, nil
}
